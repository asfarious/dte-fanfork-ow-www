###########################################
#
# Society decisions for Monks and Mystics
#
# Hermetic/mystic
# Secret religious cults
# Monastic orders
# Assassins
# Devil worshipers
#
###########################################

# General
society_decisions = {
	request_to_rank_up_within_society = {
		hide_in_decisions_list = yes # This is shown in the Society View
		ai_check_interval = 24

		only_playable = yes

		potential = {
			is_in_society = yes
			days_in_society > 365

			# In some societies, there can only be 1 member at rank 4
			trigger_if = {
				limit = {
					OR = {
						society_member_of = the_assassins
						is_devil_worshiper_trigger = yes
					}
				}

				society_rank < 3
			}
			trigger_else = {
				society_rank < 4
			}

			# Players can always rank up (if they have the power)
			trigger_if = {
				limit = { ai = yes }
				society_can_rank_up = yes
			}
		}

		allow = {
			# Rank requirements. IMPORTANT!!! If you change the requirements, the customizable loc keys "GetSocietyRankUpTooltip" 1, 2, 3, and 4 must be updated, as it displays these requirements.
			custom_tooltip = { # Sufficient currency
				text = request_to_rank_up_within_society_currency_tt

				trigger_if = {
					limit = { society_rank == 1 }
					society_currency >= 750
				}
				trigger_else_if = {
					limit = { society_rank == 2 }
					society_currency >= 1000
				}
				trigger_else = {
					society_currency >= 2000 # rank 3
				}
			}

			# custom_tooltip = { # No vices for Buddhist/Jain 					###Merged below
				# text = request_to_rank_up_within_society_vices_tt
				# OR = {
					# NOR = { society_member_of = monastic_order_jain society_member_of = monastic_order_buddhist }
					# NOR = {
						# trait = greedy
						# trait = gluttonous
						# trait = slothful
						# trait = envious
						# trait = wroth
						# trait = cruel
						# trait = proud
					# }
				# }
			# }

			trigger_if = {
				limit = { has_character_modifier = lost_rank_up_duel_cooldown }

				custom_tooltip = {
					text = recently_lost_rank_up_duel_tt

					NOT = { has_character_modifier = lost_rank_up_duel_cooldown }
				}
			}

			trigger_if = {
				limit = {
					ai = no

					any_society_member = { # and there are already 4 other Heroes (rank is full)
						count >= 4
						society_rank == 4
					}
				}

				custom_tooltip = {
					text = there_is_a_hero_available_to_duel_tt

					any_society_member = { # there is no one to duel for the spot...
						society_rank == 4
						ai = yes
						NOT = { has_character_flag = call_to_legend_active }
						is_incapable = no
						prisoner = no
					}
				}
			}

			trigger_if = {
				limit = { has_character_flag = rank_up_blocked }

				custom_tooltip = {
					text = rank_up_blocked_tt

					NOT = { has_character_flag = rank_up_blocked }
				}
			}

			custom_tooltip = {
				text = request_to_rank_up_within_society_cynical_tt

				OR = {
					NOR = {
						society_member_of = monastic_order_jain
						society_member_of = monastic_order_buddhist
						society_member_of = monastic_order_stoics
					}

					AND = {
						society_rank == 1
						NOT = {
							trait = cruel
						}
					}
					AND = {
						society_rank == 2
						NOR = {
							trait = cruel
							trait = cynical
						}
					}
					AND = {
						society_rank == 3
						NOR = {
							trait = cruel
							trait = cynical
							trait = greedy
							trait = gluttonous
							trait = slothful
							trait = envious
							trait = wroth
							trait = proud
						}
					}
				}
			}

			custom_tooltip = {
				text = request_to_rank_up_within_society_virtues_tt

				OR = {
					NOR = {
						society_member_of = monastic_order_jain
						society_member_of = monastic_order_buddhist
						society_member_of = monastic_order_stoics
					}

					AND = {
						society_rank == 1
						OR = {
							trait = humble
							trait = charitable
							trait = chaste
							trait = kind
							trait = temperate
							trait = patient
							trait = diligent
						}
					}
					AND = {
						society_rank == 2
						calc_true_if = {
							amount = 2
							trait = humble
							trait = charitable
							trait = chaste
							trait = kind
							trait = temperate
							trait = patient
							trait = diligent
						}
					}
					AND = {
						society_rank == 3
						calc_true_if = {
							amount = 3
							trait = humble
							trait = charitable
							trait = chaste
							trait = kind
							trait = temperate
							trait = patient
							trait = diligent
						}
					}
				}
			}

			custom_tooltip = {
				text = must_not_have_sent_request_already_tooltip

				NOT = { has_character_flag = has_sent_request_to_rank_up }
			}

			custom_tooltip = {
				text = must_be_allowed_to_rank_up_tooltip

				days_at_current_society_rank >= 1095 #IMPORTANT! Update tooltip.
			}

			custom_tooltip = {
				text = must_have_grandmaster_tooltip # You must have a grand master

				any_society_member = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
			}

			custom_tooltip = {
				text = must_have_multiple_rank_4 #Society must allow multiple characters at Rank 4

				trigger_if = {
					limit = { society_rank == 3 }

					NOR = {
						society_member_of = the_assassins
						is_devil_worshiper_trigger = yes
					}
				}
			}
		}

		effect = {
			society = {
				save_event_target_as = my_society
			}

			if = { # Special handling for warrior lodge rank 3 members (in a society with enough Heroes already)...
				limit = {
					ai = no
					is_member_of_any_warrior_lodge_trigger = yes
					society_rank == 3

					society = {
						any_society_member = { # make sure there is someone you can duel for the spot
							society_rank == 4
							NOT = { has_character_flag = call_to_legend_active }
							ai = yes
							prisoner = no
						}

						any_society_member = { # make sure there are already 4 other Heroes (rank is full)
							count >= 4
							society_rank == 4
						}
					}
				}

				set_character_flag = has_sent_request_to_rank_up
				character_event = { id = HF.10060 } # Duel a current Hero or nah?
			}

			# For everyone else...
			else = {
				if = {
					limit = { society_rank == 1 }
					change_society_currency = -750
				}
				else_if = {
					limit = { society_rank == 2 }
					change_society_currency = -1000
				}
				else = {
					change_society_currency = -2000
				}

				# Perform rank up
				hidden_effect = {
					save_event_target_as = rank_up_target
					set_character_flag = has_sent_request_to_rank_up

					character_event = {
						id = MNM.10002 # sends hidden delayed event to self, which then sends request to Leader of the society
						days = 20
						random = 10
					}

					# Conversus power for Benedictines
					if = {
						limit = {
							society_member_of = monastic_order_benedictine
							society_rank == 3
						}

						character_event = {
							id = MNM.4600
							days = 10
							random = 350
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.5

			mult_modifier = {
				factor = 0.5
				trait = content
			}

			mult_modifier = {
				factor = 2
				trait = ambitious
			}
		}
	}
}

society_decisions = {

	# Hermetics

	build_laboratory = {
		is_high_prio = yes
		ai_check_interval = 36

		only_playable = yes

		potential = {
			society_member_of = hermetics
			has_quest = quest_hermetics_build_laboratory
			block_general_event_trigger = no

			NOR = {
				has_character_flag = building_laboratory
				has_character_flag = built_laboratory
			}
		}

		allow = {
			wealth >= 50
		}

		effect = {
			wealth = -50

			custom_tooltip = {
				text = start_constructing_laboratory_tooltip

				set_character_flag = building_laboratory
				character_event = { id = MNM.1100 }
			}
		}

		ai_will_do = {
			factor = 1

			trigger = {
				wealth >= 75
			}

			mult_modifier = {
				factor = 0.1
				age < 30
			}
		}
	}

	# Monastic orders

	monastic_order_penance = {
		ai_check_interval = 24

		potential = {
			is_christian_monastic_member_trigger = yes
			has_quest = quest_monastic_order_penance
			NOT = { has_character_modifier = doing_penance }
		}

		allow = {
			has_quest = quest_monastic_order_penance

			custom_tooltip = {
				text = monastic_order_penance_allow_tt

				trigger_if = {
					limit = { has_character_flag = holy_seclusion_timer }

					had_character_flag = {
						flag = holy_seclusion_timer
						days >= 1000
					}
				}
			}
		}

		effect = {
			add_character_modifier = {
				name = doing_penance
				duration = -1
			}

			hidden_effect = {
				character_event = { id = MNM.4403 }
			}
		}

		ai_will_do = {
			factor = 1

			mult_modifier = {
				factor = 0.01
				war = yes
			}

			mult_modifier = {
				factor = 0.1
				OR = {
					trait = gregarious
					trait = socializer
				}
			}

			mult_modifier = {
				factor = 5
				is_virtous = yes
			}
		}
	}

	monastic_order_meditation = {
		ai_check_interval = 24

		potential = {
			has_dlc = "Mystics"

			OR = {
				society_member_of = monastic_order_stoics
				is_dharmic_monastic_member_trigger = yes
			}

			has_quest = quest_monastic_order_meditation
		}

		allow = {
			has_quest = quest_monastic_order_meditation

			custom_tooltip = {
				text = monastic_order_meditation_allow_tt

				trigger_if = {
					limit = { has_character_flag = holy_seclusion_timer }

					had_character_flag = {
						flag = holy_seclusion_timer
						days >= 1000
					}
				}
			}

			custom_tooltip = {
				text = in_meditation_cooldown_tt

				NOT = { has_character_modifier = in_meditation }
			}
		}

		effect = {
			add_character_modifier = {
				name = in_meditation
				duration = -1
			}

			hidden_effect = {
				character_event = { id = MNM.4403 }
			}
		}

		ai_will_do = {
			factor = 1

			mult_modifier = {
				factor = 0.01
				war = yes
			}

			mult_modifier = {
				factor = 0.1
				OR = {
					trait = gregarious
					trait = socializer
				}
			}

			mult_modifier = {
				factor = 5
				is_virtous = yes
			}
		}
	}

	monastic_order_rejoin_world = {
		ai = no

		potential = {
			OR = {
				has_character_modifier = doing_penance
				has_character_modifier = in_meditation
			}
		}

		allow = {
			piety >= 100

			OR = {
				has_character_modifier = doing_penance
				has_character_modifier = in_meditation
			}
		}

		effect = {
			piety = -100

			remove_character_modifier = doing_penance
			remove_character_modifier = in_meditation

			hidden_effect = {
				clr_character_flag = success_seculison_desc_A # Flags from 4426
				clr_character_flag = success_seculison_desc_B
				clr_character_flag = success_seculison_desc_C
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	# Assassins

	assassins_borrow_money = {
		ai_check_interval = 80

		only_playable = yes

		potential = {
			society_rank = {
				society = the_assassins
				rank < 4
			}

			NOT = { has_character_modifier = assassins_debt }
		}

		allow = {
			custom_tooltip = {
				text = assassins_borrow_money_tooltip

				any_society_member = {
					is_society_grandmaster = yes
					society_member_of = the_assassins

					trigger_if = {
						limit = {
							ai = yes
							primary_title = {
								title = d_hashshashin
							}
						}

						wealth >= 50
					}
				}
			}
		}

		effect = {
			custom_tooltip = {
				text = assassins_borrow_money_effect_tooltip

				random_society_member = {
					limit = {
						is_society_grandmaster = yes
						society_member_of = the_assassins
					}
					character_event = { id = MNM.6000 }
				}
			}
		}

		ai_will_do = {
			factor = 0.5

			trigger = {
				wealth < 0
			}

			mult_modifier = {
				factor = 0.1
				war = no
			}
		}
	}

	assassins_pay_debt = {
		ai_check_interval = 18

		only_playable = yes

		potential = {
			has_character_modifier = assassins_debt
			NOT = { has_character_flag = block_payback }

			any_society_member = {
				is_society_grandmaster = yes
				society_member_of = the_assassins
			}
		}

		allow = {
			# custom_tooltip = {
			#	text = assassins_pay_debt_tooltip

				wealth >= assassins_debt
			# }
		}

		effect = {
			pay_back_assassins_effect = yes
			remove_assassins_debt_effect = yes
		}

		ai_will_do = {
			factor = 0.5

			trigger = {
				NOT = {	has_character_flag = assassins_refused_to_pay_debt }

				trigger_if = {
					limit = {
						wealth < assassins_debt
						monthly_income < 0
					}

					wealth > twice_assassins_debt # TODO: Adjust in other decisions/events
				}
			}

			mult_modifier = {
				factor = 0.1
				trait = greedy
			}

			mult_modifier = {
				factor = 0.1
				war = yes
			}
		}
	}

	assassins_donate = {
		ai_check_interval = 120

		only_playable = yes

		potential = {
			society_member_of = the_assassins
			society_rank < 4
		}

		allow = {
			wealth >= 200
		}

		effect = {
			tooltip = {
				wealth = -200
				add_society_currency_minor_effect = yes
			}

			hidden_effect = {
				random_society_member = {
					limit = {
						society_rank = {
							rank == 4
							society = the_assassins
						}
					}
					character_event = { id = MNM.6004 }
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			trigger = {
				wealth >= 300
			}

			mult_modifier = {
				factor = 0.1
				trait = greedy
			}

			mult_modifier = {
				factor = 0.1
				war = yes
			}
		}
	}

	assassins_raise_troops = {
		is_high_prio = yes
		is_mercenary = yes
		ai_check_interval = 24

		only_playable = yes

		potential = {
			society_rank = {
				society = the_assassins
				rank == 4
			}
		}

		allow = {
			war = yes
			has_society_currency_major_trigger = yes

			trigger_if = {
				limit = { has_character_modifier = assassins_raise_troops_cooldown }

				custom_tooltip = {
					text = assassins_raise_troops_cooldown_TT

					always = no
				}
			}
		}

		effect = {
			sound_effect = generic_click_01
			detract_society_currency_major_effect = yes

			spawn_unit = {
				owner = ROOT
				province = capital_scope
				home = capital_scope
				attrition = 1.0
				disband_on_peace = yes
				maintenance_multiplier = 1
				earmark = assassin_troops

				troops = {
					archers = { 1500 1500 }
					light_infantry = { 2500 2500 }
					light_cavalry = { 1000 1000 }
				}
			}

			hidden_effect = {
				add_character_modifier = {
					name = assassins_raise_troops_cooldown
					years = 1
					hidden = yes
				}
			}
		}

		ai_will_do = {
			factor = 0 # decisions with "is_mercenary = yes" are not calculated from script
		}
	}

	assassins_raise_ships = {
		ai_check_interval = 24
		is_high_prio = yes
		is_mercenary = yes

		only_playable = yes

		potential = {
			society_rank = {
				society = the_assassins
				rank >= 3
			}
		}

		allow = {
			war = yes
			has_society_currency_medium_trigger = yes
		}

		effect = {
			sound_effect = generic_click_01
			detract_society_currency_medium_effect = yes

			spawn_fleet = {
				province = closest
				owner = ROOT
				disband_on_peace = yes
				earmark = assassin_ships

				troops = {
					galleys = { 45 45 }
				}
			}
		}

		ai_will_do = {
			factor = 0 # decisions with "is_mercenary = yes" are not calculated from script
		}
	}

	assassins_drug_effect = {
		ai = no

		potential = {
			society_member_of = the_assassins
			NOT = {	has_character_flag = assassins_taking_drugs	}
		}

		allow = {
			has_society_currency_minor_trigger = yes
		}

		effect = {
			detract_society_currency_minor_effect = yes

			custom_tooltip = {
				text = assassins_drug_decision_tt

				remove_character_modifier = withdrawal_symptoms

				character_event = {
					id = MNM.6800
					days = 0
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}
}

targeted_decisions = {

	#Action: recruit assassins
	assassins_recruit = {
		ai_target_filter = realm
		ai_check_interval = 24

		is_in_society = yes

		from_potential = {
			society_member_of = the_assassins
			is_adult = yes
			prisoner = no
			is_incapable = no
			NOT = { has_character_modifier = recruitment_timer }

			# Only level 2 and 3 AIs recruit
			trigger_if = {
				limit = { ai = yes }

				OR = {
					society_rank == 2
					society_rank == 3
				}
			}
		}

		potential = {
			OR = {
				FROM = { ai = no }
				ai = no
			}

			# AI only checks inside realm, so is by definition in range
			trigger_if = {
				limit = { FROM = { ai = no } }
				is_within_diplo_range = FROM
			}

			is_adult = yes
			prisoner = no
			is_incapable = no
			is_in_society = no

			trigger_if = {
				limit = { is_female = yes }

				has_game_rule = {
					name = gender
					value = all
				}
			}

			trigger_if = {
				limit = { FROM = { ai = yes } }

				# AI cannot invite other AIs when society is full
				trigger_if = {
					limit = { ai = yes }
					can_join_society = the_assassins
				}

				# Stopping the ai from making stupid choices
				OR = {
					is_friend = FROM
					is_lover = FROM
					is_close_relative = FROM
					interested_in_society = the_assassins
				}
			}

			NAND = {
				FROM = { ai = yes }
				ai = yes
				trait = zealous
				NOT = { true_religion_group = muslim }
			}
		}

		allow = {
			FROM = {
				custom_tooltip = {
					text = recruit_delay_timer_tooltip

					NOT = { has_character_modifier = recruitment_delay_timer }
				}
			}

			ROOT = {
				has_assassins_prerequisites = yes
				is_inaccessible_trigger = no

				custom_tooltip = {
					text = assassins_recruit_block_tooltip

					trigger_if = {
						limit = { has_character_flag = assassins_attempted_recruitment }
						interested_in_society = the_assassins
					}

					NOT = { has_character_flag = ongoing_recruitment }
				}
			}
		}

		effect = {
			hidden_effect = {
				set_character_flag = assassins_attempted_recruitment
				set_character_flag = ongoing_recruitment

				if = {
					limit = { religion = shiite }

					character_event = {
						id = MNM.6022
						days = 3
					}
				}
				else = {
					character_event = {
						id = MNM.6020
						days = 3
					}
				}

				character_event = {
					id = MNM.7030
					days = 365
				}

				FROM = {
					if = {
						limit = { ai = yes }

						add_character_modifier = {
							name = recruitment_timer
							years = 2
							hidden = yes
						}
					}

					add_character_modifier = {
						name = recruitment_delay_timer
						days = 90
						hidden = yes
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			trigger = {
				# Don't recruit characters interested in something else
				trigger_if = {
					limit = { is_interested_in_any_society = yes }
					interested_in_society = the_assassins
				}
			}

			mult_modifier = {
				factor = 10 # recruit interested parties
				interested_in_society = the_assassins
			}

			mult_modifier = {
				factor = 0.1
				NOT = { religion_group = muslim }
			}
		}
	}

	# Power: scare ruler
	assassins_scare_ruler = {
		ai_target_filter = realm
		ai_check_interval = 60

		only_playable = yes

		from_potential = {
			has_dlc = "Conclave"

			society_rank = {
				society = the_assassins
				rank >= 2
			}

			is_adult = yes
			is_incapable = no
			prisoner = no
		}

		potential = {
			is_ruler = yes
			age >= 10

			# Ai only checks realm, so by definition in range
			trigger_if = {
				limit = { FROM = { ai = no } }
				is_within_diplo_range = FROM
			}

			NOT = { character = FROM }
		}

		allow = {
			ROOT = {
				NOR = {
					society_member_of = the_assassins
					prisoner = yes
					is_inaccessible_trigger = yes
					owes_favor_to = FROM

					has_opinion_modifier = {
						modifier = opinion_threatened_me
						who = FROM
					}
				}
			}

			FROM = {
				has_society_currency_medium_trigger = yes
				is_inaccessible_trigger = no

				OR = {
					society_rank == 4
					same_realm = ROOT
				}
			}
		}

		effect = {
			FROM = {
				show_scope_change = no

				detract_society_currency_medium_effect = yes
			}

			random_list = {
				50 = {
					mult_modifier = {
						factor = 9
						FROM = { society_rank == 4 }
					}

					mult_modifier = {
						factor = 3
						FROM = { society_rank == 3 }
					}

					hidden_effect = {
						character_event = {
							id = MNM.6840 # Success
							days = 1
						}
					}

					FROM = {
						show_scope_change = no

						add_favor = ROOT
					}
				}

				50 = {
					# Makes it even harder to threaten someone 2 steps above you
					mult_modifier = {
						factor = 3
						trigger_if = {
							limit = { tier = EMPEROR }
							FROM = { lower_tier_than = KING }
						}
						trigger_else = {
							tier = KING
							FROM = { tier = BARON }
						}
					}

					# Makes it harder to threaten someone above you
					mult_modifier = {
						factor = 3
						higher_tier_than = FROM
					}

					custom_tooltip = {
						text = assassins_scare_ruler_fail

						FROM = {
							character_event = {
								id = MNM.6980 # Failure
								days = 1
							}
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.5

			trigger = {
				OR = {
					vassal_of = FROM
					is_liege_of = FROM
				}

				NOR = {
					is_friend = FROM
					is_lover = FROM
				}
			}

			mult_modifier = {
				factor = 0.1
				FROM = { is_benevolent_trigger = yes }
			}

			mult_modifier = {
				factor = 2
				FROM = { is_evil_trigger = yes }
			}
		}
	}

	# Power: mark for death
	assassins_mark_for_death = {
		ai_target_filter = realm
		ai_check_interval = 24

		only_playable = yes

		from_potential = {
			society_rank = {
				society = the_assassins
				rank == 4
			}

			is_adult = yes
			prisoner = no
		}

		potential = {
			NOT = { character = FROM }
			is_adult = yes
			is_within_diplo_range = FROM

			# Limits for performance and sense-making
			trigger_if = {
				limit = { FROM = { ai = yes } }

				OR = {
					is_foe = FROM

					reverse_opinion = {
						who = FROM
						value < -30
					}

					holds_favor_on = FROM

					# Unfaithful spouse
					trigger_if = {
						limit = { is_married = FROM }

						any_lover = {
							NOT = { character = FROM }
						}
					}

					# Lover of spouse
					any_lover = {
						is_married = FROM
					}

					# Lover of lover
					any_lover = {
						is_lover = FROM
					}

					# Someone sharing claims
					any_claim = {
						claimed_by = FROM
					}

					trigger_if = {
						limit = { is_ruler = yes }

						NOT = { true_religion = shiite }

						OR = {
							trait = zealous
							trait = cruel
							trait = arbitrary
						}
					}
				}
			}
		}

		allow = {
			custom_tooltip = {
				text = assassins_mark_for_death_allow_tooltip

				FROM = {
					has_society_currency_medium_trigger = yes
					NOT = { has_character_flag = assassins_marked_someone_for_death }
				}
			}
		}

		effect = {
			custom_tooltip = {
				text = assassins_mark_for_death_effect_tooltip

				set_character_flag = assassins_target_marked_for_death

				FROM = {
					set_character_flag = assassins_marked_someone_for_death
					character_event = { id = MNM.6842 }
				}
			}

			FROM = {
				show_scope_change = no

				detract_society_currency_medium_effect = yes
			}
		}

		ai_will_do = {
			factor = 0.2

			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
				}
			}

			mult_modifier = {
				factor = 0.1
				FROM = { is_benevolent_trigger = yes }
			}

			mult_modifier = {
				factor = 4
				FROM = { is_evil_trigger = yes }
			}

			mult_modifier = {
				factor = 2
				FROM = { trait = ambitious }
			}
		}
	}

	# Action: Clear marked for death
	assassins_clear_marked_for_death_target = {
		ai = no

		from_potential = {
			society_rank = {
				society = the_assassins
				rank == 4
			}

			is_adult = yes
			prisoner = no
		}

		potential = {
			has_character_flag = assassins_target_marked_for_death
			is_within_diplo_range = FROM
			is_adult = yes
			NOT = { character = FROM }
		}

		allow = {
			custom_tooltip = {
				text = assassins_clear_marked_for_death_target_allow_tooltip

				has_character_flag = assassins_target_marked_for_death
			}
		}

		effect = {
			custom_tooltip = {
				text = assassins_clear_marked_for_death_target_effect_tooltip

				clr_character_flag = assassins_target_marked_for_death
				FROM = { clr_character_flag = assassins_marked_someone_for_death }
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	# Action: (Mission only: Train Protege)
	train_assassin_protege = {
		is_high_prio = yes
		ai_check_interval = 36

		only_playable = yes

		from_potential = {
			society_member_of = the_assassins
			has_quest = quest_the_assassins_protege
			is_adult = yes
			prisoner = no
			has_regent = no
			is_inaccessible_trigger = no
			NOT = { has_character_flag = training_protege }
		}

		potential = {
			NOT = { character = FROM }
			prisoner = no
			# is_child_of = FROM
		}

		allow = {
			host = { character = FROM }
			age >= 12
			age < 21
			is_ruler = no
			is_abroad = no
			is_married = no

		#	 NOT = {
		#		any_spouse = {
		#			is_landed = yes
		#		}
		#	}

			trigger_if = {
				limit = { is_in_society = yes }
				is_in_society = no
			}

			is_inaccessible_trigger = no

			custom_tooltip = {
				text = characters_are_not_busy_tt

				war = no
				NOT = { has_character_flag = do_not_disturb }

				FROM = {
					war = no
					NOT = { has_character_flag = do_not_disturb }
				}
			}

			trigger_if = {
				limit = { NOT = { is_within_diplo_range = FROM } }
				is_within_diplo_range = FROM
			}
		}

		effect = {
			save_event_target_as = assassin_protege

			FROM = {
				set_character_flag = is_using_train_protege_decision
				character_event = { id = MNM.6250 }
			}
		}

		ai_will_do = {
			factor = 0.3

			# If the target has already recruited someone
			trigger = {
				NOT = {
					any_child = {
						same_society_as = ROOT
					}
				}
			}
		}
	}
}

society_decisions = {

	# Monastic Orders

	monastic_orders_go_celibate = {
		ai = no

		potential = {
			OR = {
				is_dharmic_monastic_member_trigger = yes
				is_christian_monastic_member_trigger = yes
				society_member_of = monastic_order_stoics
			}

			society_rank >= 2

			NOR = {
				has_character_modifier = promise_of_celibacy
				trait = celibate
			}
		}

		allow = {
			NOR = {
				trait = celibate
				trait = hedonist
				trait = seducer
				trait = seductress
			}
		}

		effect = {
			tooltip = {
				add_trait = celibate
			}

			character_event = {
				id = MNM.4090
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	monastic_orders_stop_celibate = {
		ai = no

		potential = {
			trait = celibate

			OR = {
				is_christian_monastic_member_trigger = yes
				is_dharmic_monastic_member_trigger = yes
				society_member_of = monastic_order_stoics
			}

			society_rank >= 2

			# No weaseling
			NOT = { has_character_flag = flag_papal_celibacy }
		}

		allow = {
			trait = celibate
		}

		effect = {
			tooltip = {
				remove_trait = celibate
			}

			character_event = {
				id = MNM.4091
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	monastic_orders_donate_to_charity = {
		ai_check_interval = 36

		only_playable = yes

		potential = {
			is_monastic_member_trigger = yes

			OR = {
				has_quest = quest_monastic_order_donate_to_charity
				NOT = { has_character_modifier = recently_donated_to_charity }
			}

			NOR = {
				society_member_of = monastic_order_stoics
				has_character_flag = donate_to_charity_cooldown
			}
		}

		allow = {
			wealth >= 100
		}

		effect = {
			set_character_flag = donate_to_charity_cooldown

			tooltip = {
				wealth = -100

				if = {
					limit = { has_quest = quest_monastic_order_donate_to_charity }
					add_society_currency_medium_effect = yes
				}
				else = {
					add_society_currency_minor_effect = yes
				}

				add_character_modifier = {
					modifier = recently_donated_to_charity
					years = 1
				}

				if = {
					limit = {
						NOR = {
							trait = charitable
							trait = greedy
						}
					}

					random = {
						chance = 30
						add_trait_charitable_effect = yes
					}
				}
				if = {
					limit = { trait = greedy }

					random = {
						chance = 40
						remove_trait_greedy_effect = yes
					}
				}
			}

			hidden_effect = {
				if = {
					limit = { is_society_grandmaster = no }

					random_society_member = {
						limit = {
							is_society_grandmaster = yes
							same_society_as = ROOT
						}

						character_event = { id = MNM.4013 }
					}
				}
				else_if = {
					limit = {
						is_society_grandmaster = yes

						any_society_member = {
							same_society_as = ROOT
							is_society_grandmaster = no
						}
					}

					random_society_member = {
						limit = {
							same_society_as = ROOT
							is_society_grandmaster = no
						}

						character_event = { id = MNM.4013 }
					}
				}

				else = {
					wealth = -100
					clr_character_flag = donate_to_charity_cooldown

					if = {
						limit = { has_quest = quest_monastic_order_donate_to_charity }

						add_society_currency_medium_effect = yes

						hidden_effect = {
							clr_quest = quest_monastic_order_donate_to_charity
							sound_effect = monastic_orders_donate_charity
							monastic_order_purity_effect = yes
						}

					}
					else = {
						add_society_currency_minor_effect = yes
					}

					add_character_modifier = {
						modifier = recently_donated_to_charity
						years = 1
					}

					if = {
						limit = { trait = greedy }

						random = {
							chance = 40
							remove_trait_greedy_effect = yes
						}
					}
					else = {
						random = {
							chance = 30
							add_trait_charitable_effect = yes
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}

}

targeted_decisions = {

	# Power: Dark healing
	devil_worshipers_dark_healing = {
		filter = self
		ai_target_filter = self
		ai_check_interval = 6

		is_in_society = yes

		potential = {
			is_devil_worshiper_trigger = yes
			society_rank >= 3

			NOR = {
				has_character_flag = dark_healing_in_effect
				has_character_modifier = dark_healing_recent
			}
		}

		allow = {
			has_society_currency_medium_trigger = yes

			custom_tooltip = {
				text = devil_worshipers_dark_healing_tooltip

				OR = {
					has_disease_trigger = yes
					has_symptom_trigger = yes
					has_injury_trigger = yes
					is_maimed_trigger = yes
					trait = infirm
					trait = mangled
					trait = eunuch
					trait = blinded
					is_incapable = yes
				}
			}
		}

		effect = {
			detract_society_currency_medium_effect = yes
			increase_visibility_effect = yes
			set_character_flag = dark_healing_in_effect
			character_event = { id = MNM.7118 }
		}

		ai_will_do = {
			factor = 1
		}
	}

	# Power: Demonic Possession
	devil_worshipers_demonic_possession = {
		ai_target_filter = sub_realm
		ai_check_interval = 12

		is_in_society = yes

		from_potential = {
			is_devil_worshiper_trigger = yes
			society_rank > 1
		}

		potential = {
			OR = {
				host = { character = FROM }
				liege = { character = FROM }
			}

			NOT = { character = FROM }
			ai = yes
		}

		allow = {
			FROM = {
				prisoner = no
				is_incapable = no
				has_society_currency_minor_trigger = yes

				custom_tooltip = {
					text = is_accessible

					trigger_if = {
						limit = { is_inaccessible_trigger = yes }

						has_character_modifier = in_seclusion
						at_location = ROOT

						ROOT = {
							has_character_modifier = in_seclusion
						}
					}
				}
			}

			ROOT = {
				is_incapable = no

				custom_tooltip = {
					text = possess_courtier_already_done

					NOR = {
						trait = possessed
						trait = lunatic
						has_character_flag = possessing_courtier

						has_opinion_modifier = {
							who = FROM
							modifier = opinion_loyal_servant
						}
					}
				}
			}
		}

		effect = {
			hidden_effect = {
				ROOT = {
					set_character_flag = possessing_courtier

					character_event = {
						id = MNM.7840
						days = 3
						random = 7
					}
				}
			}

			FROM = {
				show_scope_change = no

				detract_society_currency_minor_effect = yes

				if = {
					limit = { ROOT = { is_quest_target_of = FROM } }

					increase_visibility_minor_effect = yes
				}
				else = {
					increase_visibility_effect = yes
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			mult_modifier = {
				factor = 0.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 0.25
				ROOT = {
					is_landed = no
				}
			}

			mult_modifier = {
				factor = 3
				ROOT = {
					among_most_powerful_vassals = 5
				}
			}
		}
	}

	# TODO: Try to merge all devil worshipper recruit decisions/events

	# Action: Devil worshiper recruit
	devil_worshiper_recruit = {
		filter = all
		ai_target_filter = realm
		ai_check_interval = 24

		is_in_society = yes

		from_potential = {
			is_devil_worshiper_trigger = yes
			is_adult = yes
			prisoner = no
			is_incapable = no
			NOT = { has_character_modifier = recruitment_timer }

			trigger_if = {
				limit = { ai = yes }

				OR = {
					society_rank == 2
					society_rank == 3
				}
			}
		}

		potential = {
			# AI only checks realm, so by definition in range
			trigger_if = {
				limit = { FROM = { ai = no } }
				is_within_diplo_range = FROM
			}

			# AI cannot invite other AIs when society is full
			trigger_if = {
				limit = {
					ai = yes
					FROM = { ai = yes }
				}

				trigger_if = {
					limit = { FROM = { society_member_of = the_satanists } }
					can_join_society = the_satanists
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cold_ones } }
					can_join_society = the_cold_ones
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cult_of_kali } }
					can_join_society = the_cult_of_kali
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_trollcrafters } }
					can_join_society = the_trollcrafters
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_plaguebringers } }
					can_join_society = the_plaguebringers
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_vodouns } }
					can_join_society = the_vodouns
				}
				trigger_else = {
					FROM = { society_member_of = the_bacchants }
					can_join_society = the_bacchants
				}
			}

			is_adult = yes
			prisoner = no
			is_incapable = no
			is_in_society = no

			# Blocks so AI recruits sensible people (who might say no)
			trigger_if = {
				limit = { FROM = { ai = yes } }

				OR = {
					is_friend = FROM
					is_lover = FROM
					is_close_relative = FROM
					trait = trusting
					trait = drunkard
					trait = possessed
					trait = lunatic
					has_impious_trait_trigger = yes

					trigger_if = {
						limit = { FROM = { society_member_of = the_satanists } }
						interested_in_society = the_satanists
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_cold_ones } }
						interested_in_society = the_cold_ones
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_cult_of_kali } }
						interested_in_society = the_cult_of_kali
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_trollcrafters } }
						interested_in_society = the_trollcrafters
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_plaguebringers } }
						interested_in_society = the_plaguebringers
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_vodouns } }
						interested_in_society = the_vodouns
					}
					trigger_else = {
						FROM = { society_member_of = the_bacchants }
						interested_in_society = the_bacchants
					}
				}

				NOT = { trait = zealous }
			}
		}

		allow = {
			ROOT = {
				trigger_if = {
					limit = { FROM = { society_member_of = the_satanists } }
					has_satanists_prerequisites = yes
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cold_ones } }
					has_cold_ones_prerequisites = yes
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cult_of_kali } }
					has_cult_of_kali_prerequisites = yes
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_trollcrafters } }
					has_trollcrafters_prerequisites = yes
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_plaguebringers } }
					has_plaguebringers_prerequisites = yes
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_vodouns } }
					has_vodouns_prerequisites = yes
				}
				trigger_else = {
					hidden_trigger = {FROM = { society_member_of = the_bacchants } }
					has_bacchants_prerequisites = yes
				}

				is_inaccessible_trigger = no

				custom_tooltip = {
					text = devil_worshiper_recruit_block_tooltip

					trigger_if = {
						limit = { has_character_flag = satanists_attempted_recruitment }
						interested_in_society = the_satanists
					}
					trigger_else_if = {
						limit = { has_character_flag = cold_ones_attempted_recruitment }
						interested_in_society = the_cold_ones
					}
					trigger_else_if = {
						limit = { has_character_flag = cult_of_kali_attempted_recruitment }
						interested_in_society = the_cult_of_kali
					}
					trigger_else_if = {
						limit = { has_character_flag = trollcrafters_attempted_recruitment }
						interested_in_society = the_trollcrafters
					}
					trigger_else_if = {
						limit = { has_character_flag = plaguebringers_attempted_recruitment }
						interested_in_society = the_plaguebringers
					}
					trigger_else_if = {
						limit = { has_character_flag = vodouns_attempted_recruitment }
						interested_in_society = the_vodouns
					}
					trigger_else_if = {
						limit = {has_character_flag = bacchants_attempted_recruitment }
						interested_in_society = the_bacchants
					}

					NOR = {
						has_character_flag = being_recruited_by_the_bacchants
						has_character_flag = being_recruited_by_the_cult_of_kali
						has_character_flag = being_recruited_by_the_plaguebringers
						has_character_flag = being_recruited_by_the_satanists
						has_character_flag = being_recruited_by_the_trollcrafters
						has_character_flag = being_recruited_by_the_vodouns
					}
				}
			}

			FROM = {
				is_inaccessible_trigger = no

				custom_tooltip = {
					text = recruit_delay_timer_tooltip

					NOT = { has_character_modifier = recruitment_delay_timer }
				}
			}
		}

		effect = {
			hidden_effect = {
				FROM = {
					trigger_switch = {
						on_trigger = society_member_of

						the_satanists = {
							ROOT = {
								set_character_flag = satanists_attempted_recruitment
								set_character_flag = being_recruited_by_the_satanists
							}
						}

						the_cold_ones = {
							ROOT = {
								set_character_flag = cold_ones_attempted_recruitment
								set_character_flag = being_recruited_by_the_cold_ones
							}
						}

						the_cult_of_kali = {
							ROOT = {
								set_character_flag = cult_of_kali_attempted_recruitment
								set_character_flag = being_recruited_by_the_cult_of_kali
							}
						}

						the_bacchants = {
							ROOT = {
								set_character_flag = bacchants_attempted_recruitment
								set_character_flag = being_recruited_by_the_bacchants
							}
						}

						the_plaguebringers = {
							ROOT = {
								set_character_flag = plaguebringers_attempted_recruitment
								set_character_flag = being_recruited_by_the_plaguebringers
							}
						}

						the_vodouns = {
							ROOT = {
								set_character_flag = vodouns_attempted_recruitment
								set_character_flag = being_recruited_by_the_vodouns
							}
						}

						the_trollcrafters = {
							ROOT = {
								set_character_flag = trollcrafters_attempted_recruitment
								set_character_flag = being_recruited_by_the_trollcrafters
							}
						}
					}
				}

				FROM = {
					save_event_target_as = satanists_recruiter

					if = {
						limit = { ai = yes }

						add_character_modifier = {
							name = recruitment_timer
							years = 2
							hidden = yes
						}
					}

					add_character_modifier = {
						name = recruitment_delay_timer
						days = 90
						hidden = yes
					}
				}

				character_event = {
					id = MNM.7001 # Recruitment chain
					days = 3
				}

				character_event = {
					id = MNM.7030 # Delayed back up, in case recruitment fails somehow
					days = 365
				}
			}
		}

		ai_will_do = {
			factor = 1

			trigger = {
				# Don't recruit characters interested in something else
				trigger_if = {
					limit = { is_interested_in_any_society = yes }

					trigger_if = {
						limit = { FROM = { society_member_of = the_satanists } }
						interested_in_society = the_satanists
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_cold_ones } }
						interested_in_society = the_cold_ones
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_cult_of_kali } }
						interested_in_society = the_cult_of_kali
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_trollcrafters } }
						interested_in_society = the_trollcrafters
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_plaguebringers } }
						interested_in_society = the_plaguebringers
					}
					trigger_else_if = {
						limit = { FROM = { society_member_of = the_vodouns } }
						interested_in_society = the_vodouns
					}
					trigger_else = {
						FROM = { society_member_of = the_bacchants }
						interested_in_society = the_bacchants
					}
				}
			}

			mult_modifier = {
				factor = 0.2 # Slow down
				FROM = {
					society = { num_of_society_members > 20 }
				}
			}

			mult_modifier = {
				factor = 10 # Recruit interested parties

				trigger_if = {
					limit = { FROM = { society_member_of = the_satanists } }
					interested_in_society = the_satanists
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cold_ones } }
					interested_in_society = the_cold_ones
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_cult_of_kali } }
					interested_in_society = the_cult_of_kali
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_trollcrafters } }
					interested_in_society = the_trollcrafters
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_plaguebringers } }
					interested_in_society = the_plaguebringers
				}
				trigger_else_if = {
					limit = { FROM = { society_member_of = the_vodouns } }
					interested_in_society = the_vodouns
				}
				trigger_else = {
					FROM = { society_member_of = the_bacchants }
					interested_in_society = the_bacchants
				}
			}
		}
	}

	#Action: Sacrifice prisoner
	prisoner_dark_sacrifice = {
		filter = court
		ai_target_filter = court
		ai_check_interval = 12

		is_in_society = yes
		only_playable = yes

		from_potential = {
			is_devil_worshiper_trigger = yes
			is_adult = yes
			prisoner = no
			is_incapable = no
		}

		potential = {
			prisoner = yes
			host = { character = FROM }
			NOT = { has_character_flag = demon_child_non_pagan }
		}

		allow = {
			diplomatic_immunity = no
		}

		effect = {
			death = {
				death_reason = death_missing
			}

			hidden_effect = {
				long_character_event = { id = MNM.7506 }
			}

			FROM = {
				show_scope_change = no

				increase_visibility_minor_effect = yes
				minor_soul_corruption_effect = yes

				hidden_effect = {
					murder_bloodline_check_effect = yes
				}
			}

			# TODO: See if this massive nested check can be reduced

			# Head of Religion
			if = {
				limit = { controls_religion = yes }

				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7500 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { # Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }

						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_major_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { # Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_major_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_major_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female
						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_major_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}

				else = {
					# No quest so add default
					FROM = {
						show_scope_change = no

						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}

			# Holy Man
			else_if = {
				limit = {
					OR = {
						is_priest = yes
						is_ascetic_trigger = yes
					}
				}

				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7501 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { # Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }
						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { # Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
				else = {
					# No quest so add default
					FROM = {
						show_scope_change = no

						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}

			# Dwarf
			else_if = {
				limit = { trait = dwarf }

				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7502 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { # Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }
						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { # Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_medium_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
				else = {
					# No quest so add default
					FROM = {
						show_scope_change = no

						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}

			# Child
			else_if = {
				limit = { is_adult = no }

				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7503 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { # Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }
						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { # Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}

				else = {
					# No quest so add default
					FROM = {
						show_scope_change = no

						add_society_currency_trivial_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}

			# Virgin
			else_if = {
				limit = { is_virgin_trigger = yes }

				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7504 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { #Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }
						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { #Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}

				else = {
					#No quest so add default
					FROM = {
						show_scope_change = no
						add_society_currency_trivial_effect = yes
					}
					trigger_switch = {
						on_trigger = is_female
						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}

			else = {
				# Regular character
				hidden_effect = {
					FROM = {
						character_event = { id = MNM.7505 }
					}
				}

				# Check quests to resolve, add extra currency and play special sound effect
				if = { # Virgin
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_virgin }
						is_virgin_trigger = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_virgin
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_virgin_male } }
					}
				}

				else_if = { # Priestly
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_holy_person }

						OR = {
							is_priest = yes
							is_ascetic_trigger = yes
						}
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_holy_person
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_woman } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_holy_man } }
					}
				}

				else_if = { # Dwarf
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_dwarf }
						trait = dwarf
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_dwarf
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_dwarf_male } }
					}
				}

				else_if = { # Ruler
					limit = {
						FROM = { has_quest = quest_the_devil_worshipers_sacrifice_ruler }
						is_landed = yes
					}

					FROM = {
						show_scope_change = no

						clr_quest = quest_the_devil_worshipers_sacrifice_ruler
						add_society_currency_minor_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}

				else = {
					# No quest so add default
					FROM = {
						show_scope_change = no

						add_society_currency_trivial_effect = yes
					}

					trigger_switch = {
						on_trigger = is_female

						yes = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_female } }
						no = { FROM = { sound_effect = devil_worshippers_sacrifice_ruler_male } }
					}
				}
			}
		}

		ai_will_do = {
			factor = 1

			mult_modifier = {
				factor = 0.01
				is_landed = no
				is_priest = no
				is_ascetic_trigger = no
				is_virgin_trigger = no
				NOT = { trait = dwarf }
			}
		}
	}

	#Action: Demonic impregnation
	DW_demonic_impregnation = {
		filter = court_including_me
		ai_target_filter = court_including_me
		ai_check_interval = 120

		is_in_society = yes
		only_playable = yes

		from_potential = {
			is_devil_worshiper_trigger = yes

			trigger_if = {
				limit = { has_quest = quest_the_devil_worshipers_demonic_impregnation }
				society_rank >= 3
			}
			trigger_else = {
				society_rank >= 4
			}

			is_adult = yes
			prisoner = no
			is_incapable = no
		}

		potential = {
			is_female = yes
			host = { character = FROM }
			is_pregnant = no
			is_adult = yes
			practical_age < 45

			FROM = {
				OR = {
					character = ROOT
					has_quest = quest_the_devil_worshipers_demonic_impregnation
				}
			}
		}

		allow = {
			FROM = { has_society_currency_major_trigger = yes }
			is_female = yes
			is_pregnant = no
			is_devil_worshiper_trigger = yes
		}

		ai_will_do = {
			factor = 0.01

			mult_modifier = {
				factor = 100
				has_quest = quest_the_devil_worshipers_demonic_impregnation
			}
		}

		effect = {
			FROM = {
				show_scope_change = no

				increase_visibility_effect = yes
				detract_society_currency_major_effect = yes

				hidden_effect = {
					character_event = { id = MNM.7507 }
				}
			}
		}
	}

	# Action: Prolong Life/Absorb Lifeforce
	DW_prolong_life = {
		filter = dynasty
		ai_target_filter = dynasty
		ai_check_interval = 12

		is_in_society = yes
		only_playable = yes

		from_potential = {
			society_rank == 4
			is_devil_worshiper_trigger = yes
			is_adult = yes
			prisoner = no
			is_incapable = no
		}

		potential = {
			is_child_of = FROM
			is_adult = no
			host = { character = FROM }
			NOT = { has_character_flag = demon_child_non_pagan }
		}

		allow = {
			FROM = { has_society_currency_major_trigger = yes }
		}

		effect = {
			FROM = {
				show_scope_change = no

				increase_visibility_effect = yes
				detract_society_currency_major_effect = yes

				hidden_effect = {
					character_event = { id = MNM.7509 }
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			trigger = {
				NOT = { has_character_modifier = stolen_life_major }
			}

			mult_modifier = {
				factor = 10
				NOR = {
					has_character_modifier = stolen_life_minor
					has_character_modifier = stolen_life_medium
					has_character_modifier = stolen_life_major
				}
			}
		}
	}

	# Action: corrupt a priest
	devil_worshipers_corrupt_priest = {
		ai_target_filter = realm
		ai_check_interval = 12

		is_in_society = yes
		only_playable = yes

		from_potential = {
			is_devil_worshiper_trigger = yes
			society_rank > 1
		}

		potential = {
			ai = yes
			is_within_diplo_range = FROM
			religion = FROM

			OR = {
				FROM = {
					has_quest = quest_devil_worshipers_corrupt_priest
					quest_target = { character = ROOT }
				}

				AND = {
					same_realm = FROM
					is_ruler = yes
					government = theocracy_government

				#	OR = {
				#		AND = {
				#			is_landed = yes
				#
				#			capital_holding = {
				#				holding_type = temple
				#			}
				#		}
				#
				#		AND = {
				#			tier = baron
				#
				#			liege = {
				#				any_demesne_province = {
				#					any_province_holding = {
				#						holder = ROOT
				#						holding_type = temple
				#					}
				#				}
				#			}
				#		}
				#	}
				}
			}

			trigger_if = {
				limit = { is_inaccessible_trigger = yes }

				FROM = {
					has_character_modifier = in_seclusion
					at_location = ROOT
				}
				ROOT = {
					has_character_modifier = in_seclusion
				}
			}
		}

		allow = {
			FROM = {
				prisoner = no
				is_incapable = no

				OR = {
					has_society_currency_tiny_trigger = yes

					custom_tooltip = {
						text = corrupt_priest_has_quest

						has_quest = quest_devil_worshipers_corrupt_priest
					}
				}

				custom_tooltip = {
					text = is_accessible

					trigger_if = {
						limit = { is_inaccessible_trigger = yes }

						FROM = {
							has_character_modifier = in_seclusion
							at_location = ROOT
						}
						ROOT = {
							has_character_modifier = in_seclusion
						}
					}
				}

				OR = {
					custom_tooltip = {
						text = corrupt_priest_not_recently_attempted

						ROOT = {
							NOR = {
								has_character_flag = attempted_corrupt_priest

								has_opinion_modifier = {
									who = FROM
									modifier = opinion_successful_corruption
								}

								has_opinion_modifier = {
									who = FROM
									modifier = opinion_failed_corruption
								}
							}
						}
					}

					custom_tooltip = {
						text = corrupt_priest_has_quest

						has_quest = quest_devil_worshipers_corrupt_priest
					}
				}
			}

			ROOT = {
				prisoner = no
				is_incapable = no
				is_inaccessible_trigger = no
			}
		}

		effect = {
			custom_tooltip = {
				text = corrupt_priest_effect_TOOLTIP
			}

			FROM = {
				if = {
					limit = {
						NOT = { has_quest = quest_devil_worshipers_corrupt_priest }
					}

					detract_society_currency_tiny_effect = yes
				}

				if = {
					limit = {
						ROOT = { is_quest_target_of = FROM }
					}

					increase_visibility_minor_effect = yes
				}
				else = {
					increase_visibility_effect = yes
				}
			}

			ROOT = {
				set_character_flag = attempted_corrupt_priest

				hidden_effect = {
					character_event = {
						id = MNM.7825
						days = 3
						random = 7
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.1

			mult_modifier = {
				factor = 0.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 2
				is_evil_trigger = yes
			}

			mult_modifier = {
				factor = 50
				FROM = { is_quest_target_of = ROOT }
			}

			mult_modifier = {
				factor = 0.5
				NOT = { vassal_of = FROM }
			}
		}
	}

	devil_worshipers_induction = {
		filter = court
		ai_target_filter = court
		ai_check_interval = 12

		is_in_society = yes

		from_potential = {
			is_devil_worshiper_trigger = yes
			society_rank >= 2
			is_inaccessible_trigger = no
			prisoner = no

			trigger_if = {
				limit = { ai = yes }

				trigger_if = {
					limit = { society_member_of = the_satanists }

					NOT = {
						is_society_rank_full = {
							society = the_satanists
							rank = 1
						}
					}
				}
				trigger_else_if = {
					limit = { society_member_of = the_cold_ones }

					NOT = {
						is_society_rank_full = {
							society = the_cold_ones
							rank = 1
						}
					}
				}
				trigger_else_if = {
					limit = { society_member_of = the_plaguebringers }

					NOT = {
						is_society_rank_full = {
							society = the_plaguebringers
							rank = 1
						}
					}
				}
				trigger_else_if = {
					limit = { society_member_of = the_cult_of_kali }

					NOT = {
						is_society_rank_full = {
							society = the_cult_of_kali
							rank = 1
						}
					}
				}
				trigger_else_if = {
					limit = { society_member_of = the_trollcrafters }

					NOT = {
						is_society_rank_full = {
							society = the_trollcrafters
							rank = 1
						}
					}
				}
				trigger_else_if = {
					limit = { society_member_of = the_vodouns }

					NOT = {
						is_society_rank_full = {
							society = the_vodouns
							rank = 1
						}
					}
				}
				trigger_else = {
					society_member_of = the_bacchants

					NOT = {
						is_society_rank_full = {
							society = the_bacchants
							rank = 1
						}
					}
				}
			}
		}

		potential = {
			ai = yes
			prisoner = yes
			is_adult = yes
			is_incapable = no

			trigger_if = {
				limit = {
					FROM = {
						society_member_of = the_satanists
					}
				}

				OR = {
					religion_group = christian
					religion_group = muslim
					religion_group = zoroastrian_group
					religion_group = jewish_group
					religion = zun_pagan
					religion = zun_pagan_reformed
				}
			}
			trigger_else_if = {
				limit = {
					FROM = {
						society_member_of = the_cold_ones
					}
				}

				OR = {
					religion = baltic_pagan
					religion = baltic_pagan_reformed
					secret_religion = baltic_pagan
					secret_religion = baltic_pagan_reformed
					religion = slavic_pagan
					religion = slavic_pagan_reformed
					secret_religion = slavic_pagan
					secret_religion = slavic_pagan_reformed
					religion = finnish_pagan
					religion = finnish_pagan_reformed
					secret_religion = finnish_pagan
					secret_religion = finnish_pagan_reformed
				}
			}
			trigger_else_if = {
				limit = {
					FROM = {
						society_member_of = the_plaguebringers
					}
				}

				OR = {
					religion = tengri_pagan
					religion = tengri_pagan_reformed
					secret_religion = tengri_pagan
					secret_religion = tengri_pagan_reformed
				}
			}
			trigger_else_if = {
				limit = {
					FROM = {
						society_member_of = the_cult_of_kali
					}
				}

				OR = {
					religion = hindu
					secret_religion = hindu
				}
			}

			trigger_else_if = {
				limit = {
					FROM = {
						society_member_of = the_trollcrafters
					}
				}

				OR = {
					religion = norse_pagan
					religion = norse_pagan_reformed
					secret_religion = norse_pagan
					secret_religion = norse_pagan_reformed
				}
			}
			trigger_else_if = {
				limit = {
					FROM = {
						society_member_of = the_vodouns
					}
				}

				OR = {
					religion = west_african_pagan
					religion = west_african_pagan_reformed
					secret_religion = west_african_pagan
					secret_religion = west_african_pagan_reformed
				}
			}
			trigger_else = {
				FROM = {
					society_member_of = the_bacchants
				}

				OR = {
					religion = hellenic_pagan
					religion = hellenic_pagan_reformed
					secret_religion = hellenic_pagan
					secret_religion = hellenic_pagan_reformed
				}
			}
		}

		allow = {
			FROM = { society_currency >= 25 }
			is_adult = yes
			NOT = { same_society_as = FROM }
			NOT = { trait = zealous }
			NOT = { has_character_modifier = recent_induction_attempt }
		}

		effect = {
			FROM = {
				change_society_currency = -25
				increase_visibility_minor_effect = yes
				character_event = { id = MNM.7121 }
			}
		}

		ai_will_do = {
			factor = 1

			trigger = {
				NOT = { is_rival = FROM }

				# Don't recruit unimportant unrelated characters
				trigger_if = {
					limit = {
						NOT = { dynasty = FROM }
					}

					is_ruler = yes
				}
			}
		}
	}

	search_for_artifact = {
		ai_target_filter = court
		ai_check_interval = 12

		only_playable = yes

		from_potential = {
			is_ruler = yes
			prisoner = no
			is_inaccessible_trigger = no

			OR = {
				has_character_modifier = relic_rumor_major
				has_character_modifier = relic_rumor_medium
				has_character_modifier = relic_rumor_minor
			}

			trigger_if = {
				limit = { ai = yes }

				NOT = {
					any_courtier_or_vassal = {
						has_character_flag = relic_hunter
					}
				}
			}
		}

		potential = {
			is_councillor = yes
			liege = { character = FROM }
			is_incapable = no
			prisoner = no
			is_inaccessible_trigger = no
			NOT = { has_character_flag = relic_hunter }
		}

		allow = {
			custom_tooltip = { text = search_for_artifact_allow_tt }
		}

		effect = {
			if = {
				limit = {
					FROM = {
						any_courtier_or_vassal = {
							has_character_flag = relic_hunter
						}
					}
				}

				custom_tooltip = {
					text = search_for_artifact_effect_replace_tt

					FROM = {
						random_courtier_or_vassal = {
							limit = { has_character_flag = relic_hunter }

							clr_character_flag = relic_hunter
						}
					}
				}
			}

			custom_tooltip = {
				text = search_for_artifact_effect_tt

				set_character_flag = relic_hunter
				save_event_target_as = relic_hunter

				FROM = {
					save_event_target_as = relic_ruler
				}

				character_event = {
					id = MNM.9007 # The looping evaluation for progress increase/decrease begins...
					days = 30
				}
			}

			if = {
				limit = {
					FROM = {
						check_variable = {
							which = relic_score
							value >= 1
						}
					}
				}

				custom_tooltip = {
					text = search_for_artifact_effect_progress_tt

					FROM = {
						multiply_variable = {
							which = relic_score
							value = 0.75
						}
					}
				}
			}

			FROM = { add_artifact_search_payment_effect = yes }

			custom_tooltip = {
				text = outcome_will_depend_on_roots_skill_tt
			}
		}

		ai_will_do = {
			factor = 0.01

			trigger = {
				FROM = {
					wealth >= 50
				}
			}

			mult_modifier = {
				factor = 10
				OR = {
					diplomacy >= 14
					martial >= 14
					stewardship >= 14
					intrigue >= 14
					learning >= 14
				}
			}

			mult_modifier = {
				factor = 10
				OR = {
					is_friend = FROM

					reverse_opinion = {
						who = FROM
						value >= 30
					}
				}
			}
		}
	}

	stop_artifact_search = {
		ai_target_filter = court
		ai_check_interval = 36

		only_playable = yes

		from_potential = {
			is_ruler = yes

			OR = {
				has_character_modifier = relic_rumor_major
				has_character_modifier = relic_rumor_medium
				has_character_modifier = relic_rumor_minor
			}

			OR = {
				has_character_modifier = pays_for_artifact_hunt_minor
				has_character_modifier = pays_for_artifact_hunt_medium
				has_character_modifier = pays_for_artifact_hunt_major
			}

			is_inaccessible_trigger = no
			prisoner = no
		}

		potential = {
			has_character_flag = relic_hunter
		}

		effect = {
			custom_tooltip = {
				text = stop_artifact_search_effect_tt

				FROM = {
					trigger_switch = {
						on_trigger = has_character_modifier

						pays_for_artifact_hunt_minor = { remove_character_modifier = pays_for_artifact_hunt_minor }
						pays_for_artifact_hunt_medium = { remove_character_modifier = pays_for_artifact_hunt_medium }
						pays_for_artifact_hunt_major = { remove_character_modifier = pays_for_artifact_hunt_major }
					}
				}

				clr_character_flag = relic_hunter
			}
		}

		ai_will_do = {
			factor = 0.3

			trigger = {
				wealth < -100

				check_variable = {
					which = relic_score
					value < -2
				}
			}
		}
	}

	decision_abduct = {
		ai = no

		from_potential = {
			OR = {
				is_devil_worshiper_trigger = yes
				society_member_of = the_assassins
			}

			is_incapable = no
			prisoner = no
			NOT = { has_any_opinion_modifier = opinion_abducting }
		}

		potential = {
			ai = yes
			is_patrician = no

			trigger_if = {
				limit = { is_landed = yes }

				lower_tier_than = DUKE
			}

			trigger_if = {
				limit = {
					father = {
						always = yes
					}
				}

				father_even_if_dead = {
					lower_tier_than = DUKE
					is_patrician = no
					ai = yes
				}
			}

			trigger_if = {
				limit = {
					mother = {
						always = yes
					}
				}

				mother_even_if_dead = {
					lower_tier_than = DUKE
					is_patrician = no
					ai = yes
				}
			}

			trigger_if = {
				limit = { is_married = yes }

				spouse = {
					lower_tier_than = DUKE
					is_patrician = no
					ai = yes
				}
			}

			NOT = { character = FROM }
		}

		allow = {
			in_revolt = no
			NOT = { war_with = FROM }
			NOT = { same_society_as = FROM }
			prisoner = no

			trigger_if = {
				limit = { is_ruler = no }

				FROM = {
					has_society_currency_tiny_trigger = yes
				}
			}
			trigger_else_if = {
				limit = { real_tier = BARON }

				FROM = {
					has_society_currency_minor_trigger = yes
				}
			}
			trigger_else = {
				FROM = {
					has_society_currency_medium_trigger = yes
				}
			}

			is_within_diplo_range = FROM
		}

		effect = {
			if = {
				limit = { is_ruler = no }

				FROM = {
					detract_society_currency_tiny_effect = yes
				}
			}

			else_if = {
				limit = { real_tier = BARON }

				FROM = {
					detract_society_currency_minor_effect = yes
				}
			}
			else = {
				FROM = {
					detract_society_currency_medium_effect = yes
				}
			}

			hidden_effect = {
				FROM = {
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = opinion_abducting
							}
						}

						reverse_remove_opinion = {
							who = PREV
							modifier = opinion_abducting
						}
					}

					opinion = {
						who = ROOT
						modifier = opinion_abducting
						years = 1000
					}

					character_event = {
						id = MNM.20070
						days = 1
					}
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	stop_abduct_decision = {
		filter = self

		ai = no
		is_in_society = yes

		potential = {
			has_any_opinion_modifier = opinion_abducting

			OR = {
				is_devil_worshiper_trigger = yes
				society_member_of = the_assassins
			}
		}

		effect = {
			random_opinion_modifier_target = {
				limit = {
					ROOT = {
						has_opinion_modifier = {
							who = PREV
							modifier = opinion_abducting
						}
					}
				}

				save_event_target_as = target_abduction

				ROOT = {
					character_event = {
						id = MNM.20100
						tooltip = stop_abduct_decision_tt
					}
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

	stop_abduct_decision_target = {
		ai = no
		is_in_society = yes

		from_potential = {
			has_any_opinion_modifier = opinion_abducting

			OR = {
				is_devil_worshiper_trigger = yes
				society_member_of = the_assassins
			}
		}

		potential = {
			FROM = {
				has_opinion_modifier = {
					who = ROOT
					modifier = opinion_abducting
				}
			}
		}

		effect = {
			hidden_tooltip = {
				save_event_target_as = target_abduction

				FROM = {
					character_event = { id = MNM.20100 }
				}
			}
		}

		ai_will_do = {
			factor = 0
		}
	}

}

decisions = {
	employ_a_smith = {
		ai_check_interval = 36

		only_playable = yes

		potential = {
			OR = {
				has_dlc = "Mystics"
				has_dlc = "Jade Dragon"
			}

			is_landed = yes

			trigger_if = {
				limit = { ai = yes }

				higher_tier_than = COUNT
				mercenary = no
			}

			NOT = { government = order_government }
			is_adult = yes
			is_incapable = no
			is_lowborn = no

			# Block player from action if they have already gotten all of the artifacts which they can obtain from this action
			NAND = {
				have_all_armorsmith_artifacts_all_flags_trigger = yes
				have_all_weaponsmith_artifacts_all_flags_trigger = yes
				have_duplicate_goldsmith_artifacts_flag_okay_trigger = yes
				have_duplicate_goldsmith_artifacts_flag_good_trigger = yes
				have_duplicate_goldsmith_artifacts_flag_expensive_trigger = yes
				have_duplicate_goldsmith_artifacts_flag_amazing_trigger = yes
			}
		}

		allow = {
			trigger_if = {
				limit = { ai = yes }
				wealth >= 500
			}

			is_inaccessible_trigger = no

			custom_tooltip = {
				text = employ_a_smith_cooldown_tt

				NOT = { has_character_modifier = employ_a_smith_cd }
			}
		}

		effect = {
			custom_tooltip = {
				text = employ_a_smith_tt

				character_event = { id = MNM.9130 }

				add_character_modifier = {
					name = employ_a_smith_cd
					years = 2
					hidden = yes
				}
			}
		}

		ai_will_do = {
			factor = 1

			trigger = {
				NAND = {
					any_artifact = { has_artifact_flag = combat_weapon }
					any_artifact = { has_artifact_flag = armor_set }
					any_artifact = { has_artifact_flag = crown_jewel }
				}
			}

			mult_modifier = {
				factor = 0.5
				lower_real_tier_than = KING
			}

			mult_modifier = {
				factor = 0.5
				trait = greedy
			}

			mult_modifier = {
				factor = 2
				trait = ambitious
			}

			mult_modifier = {
				factor = 0.1
				trait = content
			}
		}
	}
}